- can_update = policy(@scoreboard.event).update? && !@scoreboard.event.finished? && !request.variant.include?(:mobile)
- cache ['scoreboard', I18n.locale, @scoreboard.event, display_event_params, can_update] do
  .scoreboard{'data-controller': 'events--sticky-header'}
    .scoreboard-scroll{'data-target': 'events--sticky-header.container', 'data-action': 'scroll->events--sticky-header#on_horizontal_scroll'}
      %table.scoreboard-table{'data-target': 'events--sticky-header.table'}
        %thead
          %tr
            %th.text-center{rowspan: 3} #
            %th{rowspan: 3, colspan: 2}= t('activerecord.models.event/competitor')
            - @scoreboard.rounds_by_discipline.each do |discipline, rounds|
              %th.text-center{colspan: (rounds.count * 2 + 1)}= t('disciplines.' + discipline)
            %th.text-center{rowspan: 3}= t('events.show.total')

          %tr
            - @scoreboard.rounds_by_discipline.each do |discipline, rounds|
              - rounds.each do |round|
                %th.scoreboard-round{colspan: 2}
                  .scoreboard-round-content
                    = round.number
                    - if can_update
                      - if round.completed
                        &nbsp;
                        %i.fa.fa-lock.text-muted
                      -else
                        &nbsp;
                        %i.fa.fa-unlock-alt.text-muted
                    .scoreboard-round-actions.dropdown
                      %button.btn-link{'data-toggle': 'dropdown'}
                        %i.fa.fa-ellipsis-v.text-muted
                      %ul.dropdown-menu.dropdown-menu-right
                        %li
                          = link_to event_round_map_path(@event, round), rel: 'nofollow' do
                            %i.fa.fa-fw.far.fa-compass.text-muted
                            Google maps
                        %li
                          = link_to event_round_globe_path(@event, round), remote: true, class: 'round-map-view', rel: 'nofollow' do
                            %i.fa.fa-fw.far.fa-compass.text-muted
                            3D maps
                        %li
                          = link_to event_round_replay_path(@event, round), rel: 'nofollow' do
                            %i.fa.fa-fw.fas.fa-play.text-muted
                            Replay

                        - if can_update
                          %li.divider
                          %li
                            - if round.completed
                              = button_to event_round_path(@event, round),
                                          method: :put,
                                          params: { round: { completed: false } },
                                          remote: true,
                                          class: 'btn-link' do
                                Mark uncomplete
                            - else
                              = button_to event_round_path(@event, round),
                                          method: :put,
                                          params: { round: { completed: true } },
                                          remote: true,
                                          class: 'btn-link' do
                                Mark complete
                          %li.divider
                          %li
                            = button_to event_round_path(@event, round),
                                        method: :delete,
                                        remote: true,
                                        class: 'btn-link' do
                              %i.fa.fa-fw.fa-times.text-muted
                              = t('general.delete')
              %th.text-center{rowspan: 2, 'data-discipline' => discipline, 'data-role' => 'points'} %

          %tr
            - @scoreboard.rounds_by_discipline.each do |discipline, rounds|
              - rounds.each do
                %th.text-center= t('units.' + discipline_unit(discipline.to_sym).to_s)
                %th.text-center %

        - @scoreboard.sections.each do |section|
          %tbody
            = render 'events/sections/section_row',
                     section: section,
                     columns_count: @scoreboard.columns_count,
                     editable: can_update

            - rank = 0
            - prev_total = 0
            - section.competitors.each_with_index do |competitor, index|
              :ruby
                total_points = competitor.total_points.to_f

                rank =
                  if total_points == prev_total && total_points.positive?
                    rank
                  else
                    index + 1
                  end

                prev_total = total_points


              %tr.scoreboard-competitor{id: dom_id(competitor)}
                %td.text-center= rank

                = render 'events/competitors/competitor_cells',
                         competitor: competitor,
                         editable: can_update

                - @scoreboard.rounds_by_discipline.each do |discipline, rounds|
                  - rounds.each do |round|
                    - result = @scoreboard.results.for(competitor: competitor, round: round)
                    - if result && (round.completed || can_update)
                      = render 'events/scoreboards/result',
                               { event: @scoreboard.event,
                                 result: result,
                                 can_update: can_update,
                                 result_class: ('text-green' if result.best_in_round_and_category?) }

                      %td.text-right
                        - if round.completed
                          - if result.penalized?
                            %span.dotted-underline{'data-toggle': 'tooltip', title: result.penalty_reason}
                              = result.formated_points

                              - if result.apply_penalty_to_score?
                                %sup.text-danger= "-#{result.penalty_size}%"
                          - else
                            = result.formated_points
                    - elsif can_update
                      %td.scoreboard-result.text-center
                        %span= new_event_track_link(@scoreboard.event, competitor, round)
                      %td

                    - else
                      %td
                      %td

                  %td.text-right
                    - points_in_discipline = competitor.points_in_discipline(discipline)
                    - if points_in_discipline&.positive?
                      = '%.1f' % points_in_discipline

                %td.scoreboard-total-result
                  - if competitor.total_points.positive?
                    = '%.1f' % competitor.total_points
